@page "/"

@using ActivityTracker.Core.Features.ActivityTracking
@inject IActivityService ActivityService

<h1>Activity Logs</h1>

@if (_logEntries == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@_searchRequest" OnValidSubmit="UpdateEntries">
        <DataAnnotationsValidator />
        <ValidationSummary />

        Search Text : <InputText id="name" @bind-Value="_searchRequest.SearchText" />
        Start <input @bind="_searchRequest.StartDateTime" @bind:format="yyyy-MM-ddTHH:mm" type="datetime-local"/>
        End <input @bind="_searchRequest.EndDateTime" @bind:format="yyyy-MM-ddTHH:mm" type="datetime-local"/>

        <button type="submit">Submit</button>
    </EditForm>

    <table class="table">
        <thead>
            <tr>
                <th>Day</th>
                <th>Start Time</th>
                <th>End Time</th>
                <th>Application Title</th>
                <th>Window Title</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var log in _logEntries)
            {
                <tr>
                    <td>@log.StartDateTime.ToLocalTime().ToShortDateString()</td>
                    <td>@log.StartDateTime.ToLocalTime().ToLongTimeString()</td>
                    <td>@(log.EndDateTime.HasValue? log.EndDateTime.Value.ToLocalTime().ToLongTimeString() : "N/A")</td>
                    <td>@log.ApplicationTitle</td>
                    <td>@log.WindowTitle.Substring(0, Math.Min(log.WindowTitle.Length, 100))</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<ActivityLogEntry> _logEntries;
    private ActivityLogSearchRequest _searchRequest;

    protected override async Task OnInitializedAsync()
    {
        _searchRequest = new ActivityLogSearchRequest(){
            StartDateTime = DateTime.Now.AddDays(-1).Date,
            EndDateTime = DateTime.Now.AddDays(1).Date
        };

        await UpdateEntries();
    }

    private async Task UpdateEntries()
    {
        _logEntries = (await ActivityService.SearchActivityLogEntriesAsync(_searchRequest))?.Results;
    }
}
